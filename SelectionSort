package ThreeAlgorithm;


public class SelectionSort {
	private int [] element;
	private int eSize;
	
	public SelectionSort(int size) {
		if(size > 0)
			this.element = new int[size];
		else
			// default element.length == 10
			this.element = new int[10];
		
		eSize = 0;
	}
	
	public void insert(int e) {
		this.element[eSize] = e;
		eSize++;
	}
	
	public void show() {
		for(int i=0; i < eSize; i++) {
			System.out.print(this.element[i] + " ");
		}
		
		System.out.println("");
	}
	
	public void sort() {
		int out, in, min;
		
		for(out = 0; out < eSize-1; out++) {
			min = out;
			for(in = out+1; in < eSize; in++) {
				if(this.element[in] < this.element[min]) {
					min = in;
				}
			}
			this.swap(out, min);
		}
	}
	
	private void swap(int left, int right) {
		int temp = this.element[left];
		this.element[left] = this.element[right];
		this.element[right] = temp;
	}
	
	public void sort1() {
		int out, in;
		
		for(out = eSize - 1; out > 0; out--) {
			for(in = 0; in < out; in++) {
				if(this.element[in] > this.element[in + 1]) {
					this.swap(in, in+1);
				}
			}
		}
}
	public static void main(String args[]) {
		long total = 0;
		int iter = 100;
		int num = 1000;
		//int[] a = new int[iter];
		SelectionSort b = new SelectionSort(num);
		for (int j = 0; j < num; j++) {
			b.insert((int) (Math.random() * num));
		}
		for (int i = 0; i < iter; i++) {
			long startTime = System.nanoTime();
			b.sort();
			long endTime = System.nanoTime();
			total += (endTime - startTime);
			System.out.println(
					"StratTime : " + startTime + "  End time : " + endTime + "  Totaltime : " + (endTime - startTime));
			System.out.println("----------------------------------------------------------------------------------");
			long avg = total / iter;
			System.out.print("Average time : " + avg + " ns");
		}
	}
}
